<CoverageOffering>
  <description>{{ coverage_offering.description }}</description>
  <name>{{ coverage_offering.name }}</name>
  <label>{{ coverage_offering.label }}</label>
  <domainSet>
    <spatialDomain>
      <gml:Envelope srsName="EPSG:4326">
        <gml:pos>{{ coverage_offering.get_min_point }}</gml:pos>
        <gml:pos>{{ coverage_offering.get_max_point }}</gml:pos>
      </gml:Envelope>
      <gml:RectifiedGrid></gml:RectifiedGrid>
    </spatialDomain>
    {% if coverage_offering.offer_temporal %}
      <temporalDomain>
        {% for time in coverage_offering.get_temporal_domain %}
          <gml:timePosition>{{ time }}</gml:timePosition>
        {% endfor %}
      </temporalDomain>
    {% endif %}
  </domainSet>
  <rangeSet>
    <RangeSet>
      <name>Bands</name>
      <label>Data Cube bands/measurements</label>
      <axisDescription>
        <AxisDescription>
          <name>measurements</name>
          <label>Bands/Channels/Samples</label>
          <values>
            {% for measurement in coverage_offering.get_measurements %}
              <singleValue>{{ measurement }}</singleValue>
            {% endfor %}
          </values>
        </AxisDescription>
      </axisDescription>
      <NullValues>
        {% for nodata_value in coverage_offering.get_nodata_values %}
          <singleValue>{{ nodata_value }}</singleValue>
        {% endfor %}
      </NullValues>
    </RangeSet>
  </rangeSet>
  <supportedCRSs>
    <requestResponseCRSs>EPSG:4326</requestResponseCRSs>
    {% for crs in available_input_crs %}
      <requestCRSs>{{ crs }}</requestCRSs>
    {% endfor %}
    {% for crs in available_output_crs %}
      <responseCRSs>{{ crs }}</responseCRSs>
    {% endfor %}
    {% for crs in native_crs %}
      <nativeCRSs>{{ crs }}</nativeCRSs>
    {% endfor %}
  </supportedCRSs>
  <supportedFormats nativeFormat="GeoTIFF">
    {% for format in valid_formats %}
      <formats>{{ format }}</formats>
    {% endfor %}
  </supportedFormats>
  <supportedInterpolations default="nearest neighbor">
    {% for method in interpolation_methods %}
      <interpolationMethod>{{ method }}</interpolationMethod>
    {% endfor %}
  </supportedInterpolations>
</CoverageOffering>
